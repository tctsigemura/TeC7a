/*
 * TaC IPL Source Code
 *    Tokuyama kousen Educational Computer 16bit Ver.
 *
 * Copyright (C) 2009-2019 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * ipl.cmm : C-- 言語版の TaC IPL
 *
 * 2019.02.03 v3.1.0    : TeCモードでSETAとRESETの同時押しでTacOSを起動する
 * 2016.01.10 v3.0.1    : メッセージ表示後止まるように変更
 * 2016.01.07 v3.0.0    : 川部版と統合
 * 2012.09.13 v2.0.0    : TaC-CPU V2 対応、"kernel.bin"ファイルをブートする
 * 2012.03.02 v1.0.0    : メッセージ等の調整
 * 2012.02.29           : TeC7 用に変更(uSD からブートする)
 * 2010.09.08           : 定数式を普通に書く(コンパイラの最適化にたよる)
 * 2010.07.20           : Subversion による管理を開始
 * 2010.07.16 v0.1.4    : Alternate Status のアドレスの間違え(一箇所)を修正
 * 2010.04.22           : ブート時のメッセージを変更
 * 2010.03.12 v0.1.3    : main, cls, ... に public 修飾を追加
 * 2009.06.12 v0.1.2    : reset ビット(nIEN)の位置の間違えを修正
 * 2009.05.13 v.0.1.1   : putch が \b, \t をサポート
 * 2009.04.10 v.0.1     : 宇野氏と相談しながら実用化
 * 2009.03.13 v.0.0     : 開発開始
 *
 * $Id$
 *
 */

#include "crt0.h"
#include "console.h"
#include "loader.h"

// ここからスタート
public void main() {
  consInit();                  // コンソールドライバ初期化

  putstr("TaC Initial Program Loader Ver.");
  putstr( VER );
  putstr("\n" );
  putstr("(build date : ");
  putstr( DATE );
  putstr(")\n");
  putstr("Copyright(c) 2009-2019 Tokuyama College of Technology\n");
  putstr("All rights reserved.\n\n");

  if (in(0x1e)==1) {           // TaC Mode
    putstr("Push \"RUN\" to boot the kernel\n");
    halt();
  } else {                     // TeC, DEMO Mode
    putstr("Push \"SETA\"+\"RESET\" to boot the kernel\n");
    for (;in(0x36)!=3;) {
    }
  }
  putstr("Load kernel ... ");
  initLoader();                         // カーネルローダ初期化
  int addr = load("KERNEL  ", "BIN");   // "KERNEL.BIN" をロード

  putstr("(Start kernel@0x");
  _puthex( addr );
  putstr(")\n");
  jump(addr);
}
